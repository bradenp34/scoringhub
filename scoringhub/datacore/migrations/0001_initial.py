# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-10-06 17:45
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=45)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=45, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=45, null=True)),
                ('state', models.CharField(blank=True, db_column='State', max_length=45, null=True)),
                ('zipcode', models.CharField(blank=True, db_column='ZipCode', max_length=45, null=True)),
                ('phonenumber', models.CharField(blank=True, db_column='PhoneNumber', max_length=45, null=True)),
                ('email', models.CharField(db_column='Email', max_length=45)),
                ('createdate', models.DateTimeField(blank=True, db_column='CreateDate', null=True)),
            ],
            options={
                'db_table': 'Club',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=45, null=True)),
            ],
            options={
                'db_table': 'Course',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=45, null=True)),
                ('targetcount', models.IntegerField(blank=True, db_column='TargetCount', null=True)),
            ],
            options={
                'db_table': 'Game',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('clubid', models.IntegerField(db_column='ClubID')),
                ('name', models.CharField(blank=True, db_column='Name', max_length=45, null=True)),
                ('startdate', models.DateTimeField(blank=True, db_column='StartDate', null=True)),
                ('enddate', models.DateTimeField(blank=True, db_column='EndDate', null=True)),
                ('fee', models.IntegerField(blank=True, db_column='Fee', null=True)),
            ],
            options={
                'db_table': 'League',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pageaccess',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=45)),
                ('url', models.CharField(blank=True, db_column='URL', max_length=45, null=True)),
            ],
            options={
                'db_table': 'PageAccess',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=45)),
            ],
            options={
                'db_table': 'Role',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('date', models.DateTimeField(blank=True, db_column='Date', null=True)),
                ('courseid', models.IntegerField(db_column='CourseID')),
            ],
            options={
                'db_table': 'Round',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Scorecard',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('station_targetnumber', models.IntegerField(db_column='Station_TargetNumber')),
                ('targethit', models.SmallIntegerField(db_column='TargetHit')),
            ],
            options={
                'db_table': 'ScoreCard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Shooter',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('firstname', models.CharField(db_column='FirstName', max_length=45)),
                ('lastname', models.CharField(db_column='LastName', max_length=45)),
                ('streetaddress', models.CharField(blank=True, db_column='StreetAddress', max_length=45, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=45, null=True)),
                ('state', models.CharField(blank=True, db_column='State', max_length=45, null=True)),
                ('zipcode', models.CharField(blank=True, db_column='ZipCode', max_length=45, null=True)),
                ('phonenumber', models.CharField(blank=True, db_column='PhoneNumber', max_length=45, null=True)),
                ('emailaddress', models.CharField(db_column='EmailAddress', max_length=45)),
                ('nscanumber', models.CharField(blank=True, db_column='NSCANumber', max_length=45, null=True)),
                ('createdate', models.DateTimeField(blank=True, db_column='CreateDate', null=True)),
                ('password', models.CharField(db_column='Password', max_length=30)),
                ('loginname', models.CharField(blank=True, db_column='LoginName', max_length=45, null=True)),
            ],
            options={
                'db_table': 'Shooter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=45, null=True)),
                ('targetnumber', models.IntegerField(db_column='TargetNumber')),
                ('clubid', models.IntegerField(db_column='ClubID')),
                ('courseid', models.IntegerField(db_column='CourseID')),
            ],
            options={
                'db_table': 'Station',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Targettype',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=45, null=True)),
            ],
            options={
                'db_table': 'TargetType',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=45, null=True)),
                ('haspaid', models.SmallIntegerField(blank=True, db_column='HasPaid', null=True)),
                ('createdate', models.DateTimeField(blank=True, db_column='CreateDate', null=True)),
            ],
            options={
                'db_table': 'Team',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Clubhasshooter',
            fields=[
                ('clubid', models.ForeignKey(db_column='ClubID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='datacore.Club')),
                ('membersince', models.DateTimeField(blank=True, db_column='MemberSince', null=True)),
                ('isactive', models.SmallIntegerField(blank=True, db_column='IsActive', null=True)),
                ('activeuntil', models.DateTimeField(blank=True, db_column='ActiveUntil', null=True)),
            ],
            options={
                'db_table': 'ClubHasShooter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Leaguehasgame',
            fields=[
                ('leagueid', models.ForeignKey(db_column='LeagueID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='datacore.League')),
                ('rounds', models.IntegerField(blank=True, db_column='Rounds', null=True)),
            ],
            options={
                'db_table': 'LeagueHasGame',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Leaguehasteam',
            fields=[
                ('leagueid', models.ForeignKey(db_column='LeagueID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='datacore.League')),
            ],
            options={
                'db_table': 'LeagueHasTeam',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rolehaspageaccess',
            fields=[
                ('role', models.ForeignKey(db_column='Role_ID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='datacore.Role')),
            ],
            options={
                'db_table': 'RoleHasPageAccess',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Shooterhasrole',
            fields=[
                ('shooterid', models.ForeignKey(db_column='ShooterID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='datacore.Shooter')),
            ],
            options={
                'db_table': 'ShooterHasRole',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Shooterhasround',
            fields=[
                ('shooterid', models.ForeignKey(db_column='ShooterID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='datacore.Shooter')),
            ],
            options={
                'db_table': 'ShooterHasRound',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Teamhasshooter',
            fields=[
                ('teamid', models.ForeignKey(db_column='TeamID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='datacore.Team')),
            ],
            options={
                'db_table': 'TeamHasShooter',
                'managed': False,
            },
        ),
    ]
